openapi: "3.0.0"
info:
  version: 1.0.0
  title: Keep all your accounts payable organized!
  license:
    name: New Generation
paths:
  /ping:
    get:
      summary: Provides information about the health of a web service
      operationId: ping
      responses:
        200:
          description: Healthy service
        500:
          description: Unhealthy service

  /customers:
    get:
      summary: List all customers
      operationId: listCustomers
      tags:
        - customers
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: An paged array of customers
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a customer
      operationId: createCustomer
      tags:
        - customers
      requestBody:
        $ref: "#/components/requestBodies/customerBody"
      responses:
        201:
          description: Created customer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /customers/{customerID}:
    get:
      summary: Info for a specific customer
      operationId: showCustomerById
      tags:
        - customers
      parameters:
        - name: customerID
          in: path
          required: true
          description: The id of the customer to retrieve
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  requestBodies:
    customerBody:
      description: A JSON object containing customer info
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'

  schemas:
    Customer:
      required:
        - firstName
        - lastName
        - phoneNumber
      properties:
        id:
          type: string
        firstname:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string

    Customers:
      type: array
      items:
        $ref: "#/components/schemas/Customer"

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string